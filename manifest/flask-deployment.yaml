apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: final
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      serviceAccountName: clo835
      containers:
      - name: flask-app
        image: 051034484218.dkr.ecr.us-east-1.amazonaws.com/webapp:v0.1
        ports:
        - containerPort: 81
        env:
        - name: DBHOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: dbhost
        - name: DBUSER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: username
        - name: DBPWD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: password
        - name: DATABASE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: database
        - name: DBPORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: dbport
        - name: OWNER_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: owner_name
        - name: S3_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: s3_bucket_name
        - name: S3_OBJECT_KEY
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: s3_object_key
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 81
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 81
          initialDelaySeconds: 5
          periodSeconds: 10
      imagePullSecrets:
      - name: ecr-secret
